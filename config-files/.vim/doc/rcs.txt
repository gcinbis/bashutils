*rcs.txt*	Assist with editing RCS controlled files.
		Last Change: April 27, 2010
		Author: Christian J. Robinson

					*rcs.vim* *rcs*

This is a set of autocommands, commands, and a menu to help you handle RCS
controlled files.  It requires Vim 7.0 or later to run.

------------------------------------------------------------------------------

1. Introduction				|rcs-intro|
2. Commands				|rcs-commands|
3. Configuration Variables		|rcs-configuration|

==============================================================================
1. Introduction					*rcs-intro*

If you try to modify a readonly file that has a RCS/<file>,v counterpart you
will be asked if you want to check the file out for modification, and when
you unload the buffer you'll be prompted if you want to check the file back
in, and allowed to enter a log message.

The commands have corresponding menu items, which should be fairly
self-explanatory.

==============================================================================
2. Commands					*rcs-commands*

						*:RCSdiff*
:RCSdiff
	View the differences between the working file and the last revision,
	using vimdiff.

						*:RCSlog*
:RCSlog
	Show the entire log file--syntax highlighted--in a split window.
	Individual log entries can be edited from this display.  And you can
	show the differences between two consecutive versions.

						*:RCSco*
:RCSco ro
	Check out the current file readonly (unlocked).

:RCSco w
	Check out the current file writable (locked).
	
	With either use of the ":RCSco" command, Vim will ask if you want to
	discard changes if you already have a locked/modifiable file, or if
	you have an unlocked file that appears to have been modified, or if
	it looks like a user other than you has locked the file.  In the
	last two cases it is advised that you say no and resolve the
	differences outside of Vim.

						*:RCSci*
:RCSci
	Check the current (changed) file in, you will be prompted for a log
	message, and the file will automatically be checked back out
	readonly.

						*:RCSUpdateHelp*
:RCSUpdateHelp [directory]
	Update the help file for this script.  If you specify a directory
	the help file will be written there rather than the doc directory
	relative to where this script is installed--useful if that directory
	is the wrong one.


==============================================================================
3. Configuration Variables			*rcs-configuration*

*g:rcs_plugin_toplevel_menu*
The name of the menu to place the RCS menu into, if you don't want it at the
top level.

*g:rcs_plugin_menu_priority*
The menu priority to use for the RCS menu.

*g:rcs_plugin_menu_force*
Force loading of the menu in console Vim.

Examples: >
 :let g:rcs_plugin_toplevel_menu = '&Misc'
 :let g:rcs_plugin_menu_priority = '130.10'
 :let g:rcs_plugin_menu_force = 1
<
