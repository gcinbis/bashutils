#!/bin/bash
# Author: Gokberk Cinbis, 2017
set -e

# NO! cmd='command git rev-list --full-history --all | head -1' 
# If we've checkout an old revision (ie. in headless state), this returns an incorrect result.
cmd='git rev-parse --verify HEAD'

if [ "$#" -eq 0 ]; then
    file="$1"
    ${cmd}
elif [ "$#" -eq 1 ]; then
    file="$1"
    if [ -f "$file" ]
    then
        echo "git_writehash: "$file" already exists. First delete existing output file."
        exit 1
    fi
    ${cmd} > "$file"
else
    echo 'git_writehash <file>'
    echo 'Echo git hash'
    echo ''   
    echo 'git_writehash <file>'
    echo 'Write git hash into a file. Exists if file already exists.'
    echo ''   
    echo 'SUGGESTED USE'   
    echo 'Call git_uniqueid to generate a log directory in the beginning of an experiment script'   
    echo 'Call git_writehash to write the current hash into a file into the log directory'
    echo 'Call git_checkhash at test time to make sure that the right revision is being used at evaluation time (if necessary)'
    echo ''   
    echo 'PACKAGE'
    echo 'git_uniqueid    Generate a unique log file/directory name for running an experiment'
    echo 'git_writehash   Write git hash into a file'
    echo 'git_checkhash   Check whether the current git hash to make sure the right code-base is being used for evaluating a pre-trained model'
    exit 3
fi




