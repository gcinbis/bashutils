#!/bin/bash 
#
# On LINUX (Gnome):
#   Reads the selection clipboard, removes all new lines, and then saves it into main clipboard.
#   To setup a shortcut in Gnome:
#       - Keyboard > Keyboard Shortcuts > <path-to>/bashutils/rm-newlines-and-paste
#       - Set shortcut to "Ctrl+Alt+V" (see keyup below for clear the conflict)
#
#   If it fails, check Gnome logs: journalctl -f
#
# On MAC:
#   It is much better to do this by:
#       - Creating a Shortcuts entry that gets clipboard, replaces \n chars, updates clipboard, and
#       finally runs an applescript that does 
#           tell application "System Events"
#               keystroke "v" using {command down}
#           end tell
#       - Set "Use as Quick Action" -> Services Menu -> Run with a shortcut of choice (I prefer Ctrl+Cmd+V).
#       - Give app-specific accessibility permissions.
#
# ChatGPT & Gokberk Cinbis, Dec 2024

# [TODO] wayland support

unameOut="$(\uname -s)"
case "${unameOut}" in
    Linux*)     machine=Linux;;
    Darwin*)    machine=Mac;;
    CYGWIN*)    machine=Cygwin;;
    MINGW*)     machine=MinGw;;
    *)          machine="UNKNOWN:${unameOut}"
esac
#echo ${machine}

if [[ $machine == "Mac" ]]; then
    pbpaste | sed -z 's/\n/ /g' | pbcopy # not yet tested but setting up a "Shortcuts" solution is much better anyways.
    echo "Clipboard contents have been updated to remove all newlines."
else
    #xsel -op | sed -z 's/\n/ /g' | xsel -ib
    xclip -o -selection clipboard | tr -d '\n' | xclip -selection clipboard
    # echo "Clipboard contents have been updated to remove all newlines."
    # Doesn't work: xdotool key ctrl+v
    # Doesn't work: xdotool key --clearmodifiers ctrl+v
    xdotool keyup ctrl+alt+v key ctrl+v # assuming ctrl+alt+v shortcut
    # keyup trick is from https://askubuntu.com/questions/1332788/xdotool-does-not-work-with-gnome-keyboard-shortcuts
fi


